[META]
# English default config.

# Coma delimited list of language codes associated with this regex config.
# The script will run against all sub-labels like ":forced" as long as they match the language code.
# leave empty to apply to all language codes.
language_codes =
excluded_language_codes =
# Usually language profiles is associated with language codes.
# But because English is such a common language it will by default run on all subtitles.

# for guidance how to use the REGEX sections, read at the bottom of the file.
# All regexes are case insensitive!
[WARNING_REGEX]

regex1: \b(subtitle(s|ed)?|fixed|sync(ed)?|ripped|correct(ions|ed)|improve(d|ments)|sub |provided|encoded)\b
regex2: \b(subtitle(s|ed)?|fixed|sync(ed)?|ripped|correct(ions|ed)|improve(d|ments)|sub |provided|encoded) (by|from)
#regex#: Regex goes here.


[PURGE_REGEX]

regex1: \b(correct(ions|ed)|ripped|sync(ed)?|subtitles|improv(ed|ments)|provided|encoded) ?(by|from)? ?(:|-) ?[^$]
regex2: rate this subtitle
regex3: Advertise your product or brand here
regex4: become VIP member
regex5: Watch more movies for free
regex6: the best subtitles
#regex#: Regex goes here.



#
# -----------------------------------------GUIDANCE-------------------------------------------------
#

# This config file contain two lists of regex that will tests for ads.
# if you wish to modify or remove any regex, feel free to do so.
# You can add and remove keys as long as two keys don't use the same key twice.

# in the WARNING_REGEX section each individual match from each regex gives one warning to the subtitle block.
# Blocks also receive additional warnings if they are adjacent to other blocks that contain ads.
# 1 warning is ignored
# 2 warnings will be print the block as a WARNING in the log.
# 3 warnings or more will remove the entire block.

# any match against the regexes in the PURGE_REGEX section will remove the entire subtitle block:

# remember that regex symbols like \^$.|?*+([{ have special meaning in regex and if you want to test for the
# literal character you'll need to escape it with '\'
# for example: matching "www." would require a regex like: "www\."
# you can test regexes online on an regex-tester tool like https://regex101.com/

# Feel free to ask me any question on github.

# if the language_codes key is empty or missing, the excluded_language_codes key can
# be used to exclude languages instead.
